# tmt does provide the `adjust` attribute to manage distro conditionals, but
# the bash way has been rather convenient to read, manage and copy-paste
# Ref: https://tmt.readthedocs.io/en/stable/spec/core.html#adjust
prepare:
    - how: shell
      script: |
        RHEL_RELEASE=$(rpm --eval %{?rhel})
        ARCH=$(uname -m)
        if [ $RHEL_RELEASE -eq 8 ]; then
            echo "Disabling container-tools module..."
            dnf -y module disable container-tools
        fi
        if [ -f /etc/centos-release ]; then
            echo "Installing epel-release..."
            dnf -y install epel-release
        elif [ $RHEL_RELEASE -ge 8 ]; then
            echo "Installing epel-release..."
            dnf -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-$RHEL_RELEASE.noarch.rpm
            echo "Enabling epel repo..."
            dnf config-manager --set-enabled epel
            cat /etc/yum.repos.d/epel.repo
        fi
        dnf -y copr enable rhcontainerbot/podman-next
        dnf config-manager --save --setopt="*:rhcontainerbot:podman-next.priority=5"
    - how: install
      package:
        - bats
        - golang
        - podman
        - podman-tests

/podman_e2e_test:
    summary: Run SELinux specific Podman e2e tests
    execute:
        how: tmt
        script: |
            echo "Checking /etc/redhat-release..."
            cat /etc/redhat-release
            echo "Checking installed versions of required packages..."
            rpm -q container-selinux golang podman
            if [ -f /etc/fedora-release ]; then
                echo "Resizing tmpfs..."
                mount -o remount,size=10G /tmp
            fi
            echo "Fetching podman srpm from copr..."
            dnf --disablerepo=* --enablerepo=copr:copr.fedorainfracloud.org:rhcontainerbot:podman-next download --source podman
            echo "Extracting podman source from srpm..."
            rpm2cpio podman*.src.rpm | cpio -di
            tar zxf podman-*-dev.tar.gz
            echo "Running podman e2e tests..."
            cd podman-*-dev/test/e2e
            PODMAN_BINARY=/usr/bin/podman go test -v config.go config_amd64.go common_test.go libpod_suite_test.go run_selinux_test.go

/podman_system_test:
    summary: Run SELinux specific Podman system tests
    execute:
        how: tmt
        script: |
            echo "Checking /etc/redhat-release..."
            cat /etc/redhat-release
            echo "Checking installed versions of required packages..."
            rpm -q container-selinux podman podman-tests
            echo "Running podman system tests..."
            bats /usr/bin/podman /usr/share/podman/test/system/410-selinux.bats
